<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>code.google.com</groupId>
    <artifactId>ramblingondesignpatterns</artifactId>
    <packaging>jar</packaging>
    <version>1.0</version>
    <name>ramblingondesignpatterns</name>
    <url>http://code.google.com/p/rambling-on-design-patterns/</url>
    <inceptionYear>2009</inceptionYear>
    
    <description>
        Sample codes on book Rambling on Patterns.
    </description>

    <developers>
        <developer>
            <id>ramblingondesignpatterns</id>
            <name>Co0der Liou</name>
            <timezone>+8</timezone>
        </developer>
    </developers>
    
    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>manual</distribution>
        </license>
    </licenses>

    <issueManagement>
        <system>rambling on design patterns</system>
        <url>http://code.google.com/p/rambling-on-design-patterns/issues/</url>
    </issueManagement>

    <scm>
        <connection>scm:svn:http://rambling-on-design-patterns.googlecode.com/svn/trunk/</connection>
        <developerConnection>scm:svn:https://rambling-on-design-patterns.googlecode.com/svn/trunk/</developerConnection>
        <url>http://code.google.com/p/rambling-on-design-patterns/source/browse</url>
    </scm>

    <dependencies>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>2.0</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate</artifactId>
            <version>3.2.4.ga</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>3.3.0.ga</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.guice</groupId>
            <artifactId>guice</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>org.picocontainer</groupId>
            <artifactId>picocontainer</artifactId>
            <version>2.8</version>
        </dependency>

        <dependency>
            <groupId>com.opensymphony</groupId>
            <artifactId>xwork</artifactId>
            <version>2.1.3</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.5.6</version>
        </dependency>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.1_3</version>
        </dependency>

        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.7</version>
        </dependency>

        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.3.1.ga</version>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>cobertura-maven-plugin</artifactId>
            <version>2.4</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>src</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <mainClass>pattern.AllTests</mainClass>
                    <arguments>
                        <argument>pattern.part1.chapter2.callback.TemplateTestDrive</argument>
                        <argument>pattern.part1.chapter2.template.HappyPeopleTestDrive</argument>
                        <argument>pattern.part2.chapter3.Client</argument>
                        <argument>pattern.part2.chapter4.Client</argument>
                        <argument>pattern.part2.chapter5.DeepCopyBeanTestDrive</argument>
                        <argument>pattern.part2.chapter5.PackageInfoTestDrive</argument>
                        <argument>pattern.part2.chapter6.annotation.Client</argument>
                        <argument>pattern.part2.chapter6.annotation.ClientTestDrive</argument>
                        <argument>pattern.part2.chapter6.constructor.Client</argument>
                        <argument>pattern.part2.chapter6.constructor.ClientTestDrive</argument>
                        <argument>pattern.part2.chapter6.factory.Client</argument>
                        <argument>pattern.part2.chapter6.iface.Client</argument>
                        <argument>pattern.part2.chapter6.iface.ClientTestDrive</argument>
                        <argument>pattern.part2.chapter6.param.Client</argument>
                        <argument>pattern.part2.chapter6.param.ClientTestDrive</argument>
                        <argument>pattern.part2.chapter6.servicelocator.Client</argument>
                        <argument>pattern.part2.chapter6.servicelocator.ClientTestDrive</argument>
                        <argument>pattern.part2.chapter6.setter.Client</argument>
                        <argument>pattern.part2.chapter6.setter.ClientTestDrive</argument>
                        <argument>pattern.part3.chapter7.DecoratorTestDrive</argument>
                        <argument>pattern.part3.chapter8.dynamic.TestDrive</argument>
                        <argument>pattern.part3.chapter8.remote.Service_Skeleton</argument>
                        <argument>pattern.part3.chapter8.remote.Client</argument>
                        <argument>pattern.part3.chapter9.TestDrive</argument>
                        <argument>pattern.part3.chapter10.FacadeTestDrive</argument>
                        <argument>pattern.part3.chapter11.safe.TestDrive</argument>
                        <argument>pattern.part3.chapter11.transparent.TestDrive</argument>
                        <argument>pattern.part4.chapter12.pattern.HappyPeopleTestDrive</argument>
                        <argument>pattern.part4.chapter12.withoutinheritance.HappyPeopleTestDrive</argument>
                        <argument>pattern.part4.chapter13.pattern.PaintBoardTestDrive</argument>
                        <argument>pattern.part4.chapter13.tiger.PaintBoardTestDrive</argument>
                        <argument>pattern.part4.chapter13.withoutpattern.PaintBoardTestDrive</argument>
                        <argument>pattern.part4.chapter14.java.TestDrive</argument>
                        <argument>pattern.part4.chapter14.pattern.TestDrive</argument>
                        <argument>pattern.part5.chapter15.bytecode.HappyPeopleTestDrive</argument>
                        <argument>pattern.part5.chapter15.dynamicproxy.HappyPeopleTestDrive</argument>
                        <argument>pattern.part5.chapter15.template.HappyPeopleTestDrive</argument>
                        <argument>pattern.part5.chapter15.interceptor.InterceptorTestDrive</argument>
                        <argument>pattern.part5.chapter16.refine.HappyPeopleTestDrive</argument>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>
    

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.4</version>
            </plugin>
        </plugins>
    </reporting>
</project>